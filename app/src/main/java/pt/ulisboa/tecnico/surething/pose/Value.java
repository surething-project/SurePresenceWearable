// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pose.proto

package pt.ulisboa.tecnico.surething.pose;

/**
 * Protobuf type {@code pt.ulisboa.tecnico.surething.pose.Value}
 */
public final class Value extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:pt.ulisboa.tecnico.surething.pose.Value)
    ValueOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Value.newBuilder() to construct.
  private Value(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Value() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Value();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Value(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            valueCase_ = 1;
            value_ = input.readInt32();
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();
            valueCase_ = 2;
            value_ = s;
            break;
          }
          case 24: {
            valueCase_ = 3;
            value_ = input.readUInt32();
            break;
          }
          case 34: {
            valueCase_ = 4;
            value_ = input.readBytes();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return pose.internal_static_pt_ulisboa_tecnico_surething_pose_Value_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return pose.internal_static_pt_ulisboa_tecnico_surething_pose_Value_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Value.class, Builder.class);
  }

  private int valueCase_ = 0;
  private Object value_;
  public enum ValueCase
      implements com.google.protobuf.Internal.EnumLite,
          InternalOneOfEnum {
    INT(1),
    TSTR(2),
    UINT(3),
    BSTR(4),
    VALUE_NOT_SET(0);
    private final int value;
    private ValueCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueCase forNumber(int value) {
      switch (value) {
        case 1: return INT;
        case 2: return TSTR;
        case 3: return UINT;
        case 4: return BSTR;
        case 0: return VALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ValueCase
  getValueCase() {
    return ValueCase.forNumber(
        valueCase_);
  }

  public static final int INT_FIELD_NUMBER = 1;
  /**
   * <pre>
   * an unsigned integer or negative integer
   * </pre>
   *
   * <code>int32 int = 1;</code>
   * @return Whether the int field is set.
   */
  @Override
  public boolean hasInt() {
    return valueCase_ == 1;
  }
  /**
   * <pre>
   * an unsigned integer or negative integer
   * </pre>
   *
   * <code>int32 int = 1;</code>
   * @return The int.
   */
  @Override
  public int getInt() {
    if (valueCase_ == 1) {
      return (Integer) value_;
    }
    return 0;
  }

  public static final int TSTR_FIELD_NUMBER = 2;
  /**
   * <pre>
   * utf-8 text string
   * </pre>
   *
   * <code>string tstr = 2;</code>
   * @return Whether the tstr field is set.
   */
  public boolean hasTstr() {
    return valueCase_ == 2;
  }
  /**
   * <pre>
   * utf-8 text string
   * </pre>
   *
   * <code>string tstr = 2;</code>
   * @return The tstr.
   */
  public String getTstr() {
    Object ref = "";
    if (valueCase_ == 2) {
      ref = value_;
    }
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      if (valueCase_ == 2) {
        value_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * utf-8 text string
   * </pre>
   *
   * <code>string tstr = 2;</code>
   * @return The bytes for tstr.
   */
  public com.google.protobuf.ByteString
      getTstrBytes() {
    Object ref = "";
    if (valueCase_ == 2) {
      ref = value_;
    }
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      if (valueCase_ == 2) {
        value_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UINT_FIELD_NUMBER = 3;
  /**
   * <pre>
   * an unsigned integer
   * </pre>
   *
   * <code>uint32 uint = 3;</code>
   * @return Whether the uint field is set.
   */
  @Override
  public boolean hasUint() {
    return valueCase_ == 3;
  }
  /**
   * <pre>
   * an unsigned integer
   * </pre>
   *
   * <code>uint32 uint = 3;</code>
   * @return The uint.
   */
  @Override
  public int getUint() {
    if (valueCase_ == 3) {
      return (Integer) value_;
    }
    return 0;
  }

  public static final int BSTR_FIELD_NUMBER = 4;
  /**
   * <pre>
   * byte string
   * </pre>
   *
   * <code>bytes bstr = 4;</code>
   * @return Whether the bstr field is set.
   */
  @Override
  public boolean hasBstr() {
    return valueCase_ == 4;
  }
  /**
   * <pre>
   * byte string
   * </pre>
   *
   * <code>bytes bstr = 4;</code>
   * @return The bstr.
   */
  @Override
  public com.google.protobuf.ByteString getBstr() {
    if (valueCase_ == 4) {
      return (com.google.protobuf.ByteString) value_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (valueCase_ == 1) {
      output.writeInt32(
          1, (int)((Integer) value_));
    }
    if (valueCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
    }
    if (valueCase_ == 3) {
      output.writeUInt32(
          3, (int)((Integer) value_));
    }
    if (valueCase_ == 4) {
      output.writeBytes(
          4, (com.google.protobuf.ByteString) value_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (valueCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            1, (int)((Integer) value_));
    }
    if (valueCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
    }
    if (valueCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(
            3, (int)((Integer) value_));
    }
    if (valueCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(
            4, (com.google.protobuf.ByteString) value_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Value)) {
      return super.equals(obj);
    }
    Value other = (Value) obj;

    if (!getValueCase().equals(other.getValueCase())) return false;
    switch (valueCase_) {
      case 1:
        if (getInt()
            != other.getInt()) return false;
        break;
      case 2:
        if (!getTstr()
            .equals(other.getTstr())) return false;
        break;
      case 3:
        if (getUint()
            != other.getUint()) return false;
        break;
      case 4:
        if (!getBstr()
            .equals(other.getBstr())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (valueCase_) {
      case 1:
        hash = (37 * hash) + INT_FIELD_NUMBER;
        hash = (53 * hash) + getInt();
        break;
      case 2:
        hash = (37 * hash) + TSTR_FIELD_NUMBER;
        hash = (53 * hash) + getTstr().hashCode();
        break;
      case 3:
        hash = (37 * hash) + UINT_FIELD_NUMBER;
        hash = (53 * hash) + getUint();
        break;
      case 4:
        hash = (37 * hash) + BSTR_FIELD_NUMBER;
        hash = (53 * hash) + getBstr().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Value parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Value parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Value parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Value parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Value parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Value parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Value parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Value parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static Value parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static Value parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Value parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Value parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Value prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code pt.ulisboa.tecnico.surething.pose.Value}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:pt.ulisboa.tecnico.surething.pose.Value)
      ValueOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pose.internal_static_pt_ulisboa_tecnico_surething_pose_Value_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pose.internal_static_pt_ulisboa_tecnico_surething_pose_Value_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Value.class, Builder.class);
    }

    // Construct using pt.ulisboa.tecnico.surething.pose.Value.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      valueCase_ = 0;
      value_ = null;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return pose.internal_static_pt_ulisboa_tecnico_surething_pose_Value_descriptor;
    }

    @Override
    public Value getDefaultInstanceForType() {
      return Value.getDefaultInstance();
    }

    @Override
    public Value build() {
      Value result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Value buildPartial() {
      Value result = new Value(this);
      if (valueCase_ == 1) {
        result.value_ = value_;
      }
      if (valueCase_ == 2) {
        result.value_ = value_;
      }
      if (valueCase_ == 3) {
        result.value_ = value_;
      }
      if (valueCase_ == 4) {
        result.value_ = value_;
      }
      result.valueCase_ = valueCase_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Value) {
        return mergeFrom((Value)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Value other) {
      if (other == Value.getDefaultInstance()) return this;
      switch (other.getValueCase()) {
        case INT: {
          setInt(other.getInt());
          break;
        }
        case TSTR: {
          valueCase_ = 2;
          value_ = other.value_;
          onChanged();
          break;
        }
        case UINT: {
          setUint(other.getUint());
          break;
        }
        case BSTR: {
          setBstr(other.getBstr());
          break;
        }
        case VALUE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Value parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (Value) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int valueCase_ = 0;
    private Object value_;
    public ValueCase
        getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public Builder clearValue() {
      valueCase_ = 0;
      value_ = null;
      onChanged();
      return this;
    }


    /**
     * <pre>
     * an unsigned integer or negative integer
     * </pre>
     *
     * <code>int32 int = 1;</code>
     * @return Whether the int field is set.
     */
    public boolean hasInt() {
      return valueCase_ == 1;
    }
    /**
     * <pre>
     * an unsigned integer or negative integer
     * </pre>
     *
     * <code>int32 int = 1;</code>
     * @return The int.
     */
    public int getInt() {
      if (valueCase_ == 1) {
        return (Integer) value_;
      }
      return 0;
    }
    /**
     * <pre>
     * an unsigned integer or negative integer
     * </pre>
     *
     * <code>int32 int = 1;</code>
     * @param value The int to set.
     * @return This builder for chaining.
     */
    public Builder setInt(int value) {
      valueCase_ = 1;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * an unsigned integer or negative integer
     * </pre>
     *
     * <code>int32 int = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearInt() {
      if (valueCase_ == 1) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * utf-8 text string
     * </pre>
     *
     * <code>string tstr = 2;</code>
     * @return Whether the tstr field is set.
     */
    @Override
    public boolean hasTstr() {
      return valueCase_ == 2;
    }
    /**
     * <pre>
     * utf-8 text string
     * </pre>
     *
     * <code>string tstr = 2;</code>
     * @return The tstr.
     */
    @Override
    public String getTstr() {
      Object ref = "";
      if (valueCase_ == 2) {
        ref = value_;
      }
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (valueCase_ == 2) {
          value_ = s;
        }
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * utf-8 text string
     * </pre>
     *
     * <code>string tstr = 2;</code>
     * @return The bytes for tstr.
     */
    @Override
    public com.google.protobuf.ByteString
        getTstrBytes() {
      Object ref = "";
      if (valueCase_ == 2) {
        ref = value_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        if (valueCase_ == 2) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * utf-8 text string
     * </pre>
     *
     * <code>string tstr = 2;</code>
     * @param value The tstr to set.
     * @return This builder for chaining.
     */
    public Builder setTstr(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 2;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * utf-8 text string
     * </pre>
     *
     * <code>string tstr = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTstr() {
      if (valueCase_ == 2) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * utf-8 text string
     * </pre>
     *
     * <code>string tstr = 2;</code>
     * @param value The bytes for tstr to set.
     * @return This builder for chaining.
     */
    public Builder setTstrBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      valueCase_ = 2;
      value_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * an unsigned integer
     * </pre>
     *
     * <code>uint32 uint = 3;</code>
     * @return Whether the uint field is set.
     */
    public boolean hasUint() {
      return valueCase_ == 3;
    }
    /**
     * <pre>
     * an unsigned integer
     * </pre>
     *
     * <code>uint32 uint = 3;</code>
     * @return The uint.
     */
    public int getUint() {
      if (valueCase_ == 3) {
        return (Integer) value_;
      }
      return 0;
    }
    /**
     * <pre>
     * an unsigned integer
     * </pre>
     *
     * <code>uint32 uint = 3;</code>
     * @param value The uint to set.
     * @return This builder for chaining.
     */
    public Builder setUint(int value) {
      valueCase_ = 3;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * an unsigned integer
     * </pre>
     *
     * <code>uint32 uint = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearUint() {
      if (valueCase_ == 3) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <pre>
     * byte string
     * </pre>
     *
     * <code>bytes bstr = 4;</code>
     * @return Whether the bstr field is set.
     */
    public boolean hasBstr() {
      return valueCase_ == 4;
    }
    /**
     * <pre>
     * byte string
     * </pre>
     *
     * <code>bytes bstr = 4;</code>
     * @return The bstr.
     */
    public com.google.protobuf.ByteString getBstr() {
      if (valueCase_ == 4) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <pre>
     * byte string
     * </pre>
     *
     * <code>bytes bstr = 4;</code>
     * @param value The bstr to set.
     * @return This builder for chaining.
     */
    public Builder setBstr(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 4;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * byte string
     * </pre>
     *
     * <code>bytes bstr = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearBstr() {
      if (valueCase_ == 4) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:pt.ulisboa.tecnico.surething.pose.Value)
  }

  // @@protoc_insertion_point(class_scope:pt.ulisboa.tecnico.surething.pose.Value)
  private static final Value DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Value();
  }

  public static Value getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Value>
      PARSER = new com.google.protobuf.AbstractParser<Value>() {
    @Override
    public Value parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Value(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Value> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Value> getParserForType() {
    return PARSER;
  }

  @Override
  public Value getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

